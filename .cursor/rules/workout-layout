---
description: 
globs: 
alwaysApply: false
---

Prompt para Desenvolvimento do Módulo de Treino do PumpgymApp
Visão Geral do Fluxo de Treino
Desenvolver um módulo completo de treino para o PumpgymApp, seguindo a mesma arquitetura e padrões do módulo de nutrição existente. O fluxo incluirá:
Estado Inicial: Calendário + Empty State
Duas Opções para o Usuário:
Montar treino personalizado
Gerar treino automático via onboarding
Geração Automática de Treino:
Onboarding simplificado
Perguntas sobre objetivo, experiência e dias disponíveis
Seleção automática do tipo de treino baseado nos dias:
1-3 dias: Fullbody
4 dias: Upper/Lower
5 dias: Arnold Split
6-7 dias: Push/Pull/Legs
Construtor de Treino Personalizado:
Processo em etapas
Seleção de dias da semana
Biblioteca de exercícios com filtros
Organização de exercícios por dia
Visualização e Execução de Treino:
Cards de treino por dia
Detalhes do treino com métricas
Cards de exercícios
Bottom sheet para registro de séries/repetições/carga
Edição e Gerenciamento:
Possibilidade de editar treinos (automáticos ou personalizados)
Navegação entre dias via calendário
Visualização de histórico
Plano de Implementação
✅ Fase 1: Estrutura Base e Contexto
[ ] Criar WorkoutContext.tsx para gerenciar estado global de treinos
[ ] Definir interfaces e tipos para treinos, exercícios e progressão
[ ] Implementar funções para CRUD de treinos
[ ] Configurar persistência local e sincronização com Firebase
[ ] Integrar com AuthContext para gerenciamento de usuários
✅ Fase 2: Componentes Básicos
[ ] Criar EmptyWorkoutState.tsx para estado inicial
[ ] Desenvolver WorkoutCard.tsx para visualização de treinos
[ ] Implementar ExerciseCard.tsx para visualização de exercícios
[ ] Criar WorkoutConfigSheet.tsx para configuração de treinos
[ ] Desenvolver ExerciseSheet.tsx para registro de séries/repetições
✅ Fase 3: Fluxo de Onboarding para Treino Automático
[ ] Criar tela workout-objective.tsx para seleção de objetivo
[ ] Implementar tela workout-experience.tsx para nível de experiência
[ ] Desenvolver tela workout-days.tsx para seleção de dias
[ ] Criar tela workout-loading.tsx para geração do treino
[ ] Implementar tela workout-summary.tsx para visualização do treino gerado
[ ] Adaptar OnboardingLayout.tsx para o fluxo de treino
✅ Fase 4: Construtor de Treino Personalizado
[ ] Criar tela workout-builder-days.tsx para seleção de dias
[ ] Implementar tela workout-builder-exercises.tsx com biblioteca de exercícios
[ ] Desenvolver tela workout-builder-organize.tsx para organização por dia
[ ] Criar tela workout-builder-summary.tsx para revisão final
✅ Fase 5: Telas Principais
[ ] Implementar tela workout.tsx para visualização principal de treinos
[ ] Criar tela workout-details.tsx para detalhes do treino do dia
[ ] Desenvolver tela exercise-execution.tsx para registro durante treino
[ ] Implementar tela workout-history.tsx para histórico de treinos
✅ Fase 6: Biblioteca de Exercícios
[ ] Criar banco de dados de exercícios com categorias
[ ] Implementar componente ExerciseLibrary.tsx com filtros
[ ] Desenvolver ExerciseDetails.tsx para visualização detalhada
[ ] Criar sistema de favoritos e exercícios recentes
✅ Fase 7: Métricas e Análises
[ ] Implementar cálculos de volume de treino
[ ] Criar visualizações de progressão de carga
[ ] Desenvolver gráficos de evolução
[ ] Implementar sistema de recordes pessoais
✅ Fase 8: Integração com Módulo de Nutrição
[ ] Criar recomendações nutricionais baseadas no treino
[ ] Implementar ajustes calóricos para dias de treino
[ ] Desenvolver visualizações combinadas de nutrição e treino
✅ Fase 9: Refinamentos e Otimizações
[ ] Implementar animações e transições
[ ] Otimizar performance e uso de memória
[ ] Melhorar experiência offline
[ ] Adicionar testes automatizados
✅ Fase 10: Lançamento e Monitoramento
[ ] Realizar testes de usabilidade
[ ] Implementar analytics para monitoramento
[ ] Preparar documentação
[ ] Lançar versão beta para feedback
Estrutura de Arquivos Propost

/app
  /(tabs)/
    training.tsx                  # Tela principal de treinos
  /(workout)/
    workout-details.tsx          # Detalhes do treino do dia
    exercise-execution.tsx       # Registro durante treino
    workout-history.tsx          # Histórico de treinos
  /(workout-builder)/
    index.tsx                    # Entrada do construtor
    days.tsx                     # Seleção de dias
    exercises.tsx                # Biblioteca de exercícios
    organize.tsx                 # Organização por dia
    summary.tsx                  # Revisão final
  /(workout-onboarding)/
    objective.tsx                # Seleção de objetivo
    experience.tsx               # Nível de experiência
    days.tsx                     # Seleção de dias
    loading.tsx                  # Geração do treino
    summary.tsx                  # Visualização do treino gerado

/components
  /workout
    EmptyWorkoutState.tsx        # Estado inicial
    WorkoutCard.tsx              # Card de treino
    ExerciseCard.tsx             # Card de exercício
    WorkoutConfigSheet.tsx       # Configuração de treinos
    ExerciseSheet.tsx            # Registro de séries/repetições
    Calendar.tsx                 # Calendário adaptado para treinos
    ExerciseLibrary.tsx          # Biblioteca de exercícios
    ExerciseDetails.tsx          # Detalhes do exercício
    ProgressChart.tsx            # Gráfico de progressão
    WorkoutMetrics.tsx           # Métricas de treino

/context
  WorkoutContext.tsx             # Contexto global de treinos
  ExerciseContext.tsx            # Contexto para biblioteca de exercícios

/constants
  WorkoutTypes.ts                # Tipos de treino
  ExerciseCategories.ts          # Categorias de exercícios

/data
  exercises.ts                   # Banco de dados de exercícios

/utils
  workoutCalculations.ts         # Cálculos para métricas de treino
  workoutGenerators.ts  



